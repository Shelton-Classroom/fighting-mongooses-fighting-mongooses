@model IEnumerable<mongoose.Models.Application>

@{
    ViewBag.Title = "Applicant";
}
@Html.Partial("_employerNav")
<h2>Applicants</h2>


@*<table class="table table-striped">
    <tr>
        <th>
            Title
        </th>
        <th>
            Student
        </th>
        <th>
            Resume
        </th>
        <th>
            Date Applied
        </th>
        <th></th>
    </tr>*@

    @foreach (var item in Model)
    {
        <div class="panel panel-primary internship_block">
            <div class="panel-heading internship_panel_heading">
                <a href="/StudentSection/Students/Details/@item.StudentId">@item.Student.LastName, @item.Student.FirstName</a>
                @{

                    <p>@Html.DisplayFor(modelItem => item.Internship.Name) # @item.Internship.InternshipId</p><p>@Html.DisplayFor(modelItem => item.ApplicationDate)</p>
                }
            </div>
            <div class="panel-body internship_panel_body">

                @if (System.IO.File.Exists(HttpContext.Current.Server.MapPath("~/Images/" + item.Student.Id + ".jpg")))
                {
                    <div class="studentOpenInternshipEmployer">
                        <a href="/StudentSection/Students/Details/@item.StudentId"><img class="studentOpenInternshipImage" src="@Url.Content(String.Format("~/Images/" + item.Student.Id + ".jpg"))" /></a>

                    </div>
                }
            <div class="applicantContact">
                <p>Contact:</p>
                <a href="mailto:@item.Student.Email">@item.Student.Email</a><br/>
                <a href="tel:@item.Student.Phone">@item.Student.Phone</a>
            </div>

                @if (System.IO.File.Exists(HttpContext.Current.Server.MapPath("~/Resumes/" + item.ApplicationId + ".docx")))
                {
                    <a href="@Url.Content(String.Format("~/Resumes/" + item.ApplicationId + ".docx"))" download="@item.Student.LastName-@item.Student.FirstName-Resume"><i class="fas fa-file-download fa-3x"></i></a>
                }
                


                <div class="internship_buttons">
                    @Html.ActionLink("Student Info", "Details/" + item.StudentId, "Students", new { area = "StudentSection" }, new { @class = "label label-success" })
                    @Html.ActionLink("Internship Info", "Details/" + item.InternshipId, "Internships", new { area = "InternshipSection" }, new { @class = "label label-primary" })
                    @Html.ActionLink("Delete", "Delete", "Applications", new { area = "ApplicationSection", id = item.ApplicationId }, new { @class = "label label-danger" })

                </div>
            </div>
        </div>
        @*<tr>
            <td>
                @Html.DisplayFor(modelItem => item.Internship.Name)
            </td>
            <td>
                @item.Student.LastName, @item.Student.FirstName
            </td>
            <td>
                @if (System.IO.File.Exists(HttpContext.Current.Server.MapPath("~/Resumes/" + item.ApplicationId + ".docx")))
                {
                    <a href="@Url.Content(String.Format("~/Resumes/" + item.ApplicationId + ".docx"))" download="@item.Student.LastName-@item.Student.FirstName-Resume"><i class="fas fa-file-download fa-2x"></i></a>
                }

            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ApplicationDate)
            </td>
            <td>
                <div class="internship_buttons">
                    @Html.ActionLink("Student Info", "Details/" + item.StudentId, "Students", new { area = "StudentSection" }, new { @class = "label label-success" })
                    @Html.ActionLink("Internship Info", "Details/" + item.InternshipId, "Internships", new { area = "InternshipSection" }, new { @class = "label label-primary" })
                    @Html.ActionLink("Delete", "Delete", "Applications", new { area = "ApplicationSection", id = item.ApplicationId }, new { @class = "label label-danger" })
                </div>

            </td>
        </tr>*@
    }

@*</table>*@
