@model List<mongoose.Models.Internship>
@{
    ViewBag.Title = "ActiveInternships";
}
@Html.Partial("_instructorNav")
<h2>ActiveInternships</h2>

<p>
    @Html.ActionLink("Create New", "Create", "Student_Internship", new { area = "Student_InternshipSection" }, null)
</p>


<p>
    @Html.ActionLink(HttpUtility.HtmlDecode("&laquo; New Course &raquo;"), "Create", null, null, new { @class = "btn btn-primary" })
    &nbsp;&nbsp;&nbsp;<label class="filter">Filter by:</label>&nbsp;&nbsp;&nbsp;<label class="filter">Course Tag</label>&nbsp;&nbsp;&nbsp;
    @*@Html.DropDownList("MajorId", null, htmlAttributes: new { @class = "filter", @onchange = "FillByTag()" })*@
    &nbsp;&nbsp;&nbsp;<label class="filter">Name</label>&nbsp;&nbsp;&nbsp;
    @Html.TextArea("Search", null, htmlAttributes: new { @class = "filter", @onchange = "FilterByName()", @rows = "1" })

</p>

<form asp-controller="Internship" asp-action="Index" method="get">
    <p>
        <input type="text" name="SearchString" />
        <input type="submit" value="Filter" />
    </p>
</form>
<table class="table"></table>


<div id="courseContainer">
    @Html.Partial("_Index", Model) @*The model item passed into the dictionary is of type 'System.Collections.Generic.List`1[mongoose.Models.Internship]', but this dictionary requires a model item of type 'System.Collections.Generic.IEnumerable`1[mongoose.Models.Student_Internship]'.*@
    @*This is a test push*@
</div>

@section Scripts {
    <script type="text/javascript">
            function FillByTag() {
                var departmentId = $('#MajorId').val();
                var container = $('#courseContainer');
                container.Load('@Url.Action("_IndexByTag")?id=' + majorId);
            }
            function FilterByName() {
                var parm = $('#Search').val();
                var container = $('#courseContainer');
                container.load('@Url.Action("_IndexByName")?parm=' + parm);
                console.log(parm);
            }

    </script>
}