@model IEnumerable<mongoose.Models.Internship>
@{
    ViewBag.Title = "OpenInterships";
}
@Html.Partial("_instructorNav")
<h2>OpenInterships</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<p>
    @Html.ActionLink(HttpUtility.HtmlDecode("&laquo; New Course &raquo;"), "Create", null, null, new { @class = "btn btn-primary" }) @*<<<This is our create*@
    &nbsp;&nbsp;&nbsp;<label class="filter">Filter by</label>&nbsp;&nbsp;&nbsp;<label class="filter">Course Tag</label>&nbsp;&nbsp;&nbsp; @*<<<This is our filter*@
    @Html.DropDownList("MajorId", null, htmlAttributes: new { @class = "filter", @onchange = "FillByTag()" }) @*<<<Drop down list*@
    &nbsp;&nbsp;&nbsp;<label class="filter">Search by Major Name</label>&nbsp;&nbsp;&nbsp;
    @Html.TextArea("Search", null, htmlAttributes: new { @class = "filter", @onchange = "FilterByName()", @rows = "1" })
</p>

<div id="courseContainer">
    @Html.Partial("_Index", Model)
</div>

@section Scripts {
    <script type="text/javascript">
        function FillByTag() {
            var departmentId = $('#MajorId').val();
            var container = $('#courseContainer');
            container.Load('@Url.Action("_IndexByTag")?id=' + majorId);
        }
        function FilterByName() {
            var parm = $('#Search').val();
            var container = $('#courseContainer');
            container.load('@Url.Action("_IndexByName")?parm=' + parm);
        }

    </script>
}

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Length)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Rate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Location)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StartDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PostDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Paid)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Employer.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Internship_Major)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Length)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Location)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PostDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Paid)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Employer.Name)
            </td>
            <td>
                @{
                    var major = item.Internship_Major.FirstOrDefault();
                    if (major != null)
                    {
                        @Html.DisplayFor(m => major.Major.Name);
                    }
                    else
                    {
                        @Html.ActionLink("Add Major +", "Create/" + item.InternshipId, "Internship_Major", new { area = "Internship_MajorSection" }, null)
                    }
                }
            </td>
            <td>

                @Html.ActionLink("Details", "Details/" + item.InternshipId, "Internships", new { area = "InternshipSection" }, null)

            </td>
        </tr>
    }

</table>
